/**
 * inversify-logger-middleware v.1.0.1 - A basic logger middleware for InversifyJS
 * Copyright (c) 2015 Remo H. Jansen <remo.jansen@wolksoftware.com> (http://www.remojansen.com)
 * MIT inversify.io/LICENSE
 * https://github.com/inversify/inversify-logger-middleware#readme
 */
import * as chalk from "chalk";
var tree = {
    item: "└──"
};
var indentationStr = "    ";
var yellow = chalk.yellow;
var green = chalk.green;
var red = chalk.red;
function getIndentationForDepth(depth) {
    var indentationForDepth = indentationStr;
    for (var i = depth; i--; i > 0) {
        indentationForDepth = "" + indentationForDepth + indentationStr;
    }
    return indentationForDepth;
}
function makePropertyLogger(indentationForDepth) {
    return function (textEntry, tabCount, key, value) {
        var line = "" + textEntry + indentationForDepth;
        for (var i = tabCount; i > 0; i--) {
            line = "" + line + indentationStr;
        }
        line = "" + line + tree.item + " " + key;
        if (value !== undefined) {
            if (typeof value !== "boolean") {
                var val = value ? value.toString().split("\n").join("") : "null";
                line = line + " : " + yellow(val);
            }
            else {
                line = line + " : " + yellow(value.toString());
            }
        }
        return line + "\n";
    };
}
export { getIndentationForDepth, makePropertyLogger, yellow, green, red };
