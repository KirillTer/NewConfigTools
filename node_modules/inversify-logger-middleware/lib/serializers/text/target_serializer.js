/**
 * inversify-logger-middleware v.1.0.1 - A basic logger middleware for InversifyJS
 * Copyright (c) 2015 Remo H. Jansen <remo.jansen@wolksoftware.com> (http://www.remojansen.com)
 * MIT inversify.io/LICENSE
 * https://github.com/inversify/inversify-logger-middleware#readme
 */
"use strict";
var metadata_serializer_1 = require("./metadata_serializer");
var text_serializer_utils_1 = require("./text_serializer_utils");
function serializeTarget(textEntry, depth, target) {
    var indentation = text_serializer_utils_1.getIndentationForDepth(depth);
    var propertyLogger = text_serializer_utils_1.makePropertyLogger(indentation);
    if (target !== undefined) {
        textEntry = propertyLogger(textEntry, 1, "target");
        if (target.serviceIdentifier !== undefined) {
            textEntry = propertyLogger(textEntry, 2, "serviceIdentifier", target.serviceIdentifier);
        }
        if (target.name !== undefined) {
            textEntry = propertyLogger(textEntry, 2, "name", (target.name.value() || "undefined"));
        }
        textEntry = metadata_serializer_1.default(textEntry, depth, target.metadata);
    }
    return textEntry;
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = serializeTarget;
