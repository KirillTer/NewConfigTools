{"ast":null,"code":"import _initializerDefineProperty from \"/Users/kirill/Work/NewConfigTools/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/kirill/Work/NewConfigTools/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/kirill/Work/NewConfigTools/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _class, _class2, _descriptor, _descriptor2, _temp;\n\nimport { observable, action } from 'mobx';\nimport \"reflect-metadata\";\nimport { injectable, inject } from \"inversify\";\nimport { TYPES } from \"../models/types\";\nlet GamesStore = (_dec = injectable(), _dec2 = inject(TYPES.TeamsStoreModel), _dec(_class = (_class2 = (_temp = class GamesStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_teams\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"games\", _descriptor2, this);\n  }\n\n  async getGames(id) {\n    try {// this.games = await fetchGamesApi(id)\n    } catch (response) {\n      alert(response.message);\n    } finally {}\n  }\n\n  getTeamNameById(id) {\n    return this._teams.getNameById(id);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"_teams\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"games\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class2.prototype, \"getGames\", [action], Object.getOwnPropertyDescriptor(_class2.prototype, \"getGames\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"getTeamNameById\", [action], Object.getOwnPropertyDescriptor(_class2.prototype, \"getTeamNameById\"), _class2.prototype)), _class2)) || _class);\nexport { GamesStore };","map":{"version":3,"sources":["/Users/kirill/Work/NewConfigTools/src/store/games.store.ts"],"names":["observable","action","injectable","inject","TYPES","GamesStore","TeamsStoreModel","getGames","id","response","alert","message","getTeamNameById","_teams","getNameById"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AACA,OAAO,kBAAP;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,WAAnC;AAGA,SAASC,KAAT,QAAsB,iBAAtB;IAIMC,U,WADLH,UAAU,E,UAGRC,MAAM,CAACC,KAAK,CAACE,eAAP,C,oCAHT,MACMD,UADN,CAC4C;AAAA;AAAA;;AAAA;AAAA;;AAM1C,QACaE,QADb,CACsBC,EADtB,EACiD;AAC/C,QAAI,CACF;AACD,KAFD,CAEE,OAAOC,QAAP,EAAiB;AACjBC,MAAAA,KAAK,CAACD,QAAQ,CAACE,OAAV,CAAL;AACD,KAJD,SAIU,CACT;AACF;;AAGMC,EAAAA,eADP,CACuBJ,EADvB,EACmC;AAChC,WAAO,KAAKK,MAAL,CAAYC,WAAZ,CAAwBN,EAAxB,CAAP;AACF;;AAnByC,C;;;;;0EAIzCR,U;;;;;WAA0B,E;;8DAE1BC,M,wJAUAA,M;AAMH,SAAQI,UAAR","sourcesContent":["import { observable, action } from 'mobx'\nimport \"reflect-metadata\";\nimport { injectable, inject } from \"inversify\";\nimport { fetchGamesApi } from '../api'\nimport { Games, GamesStoreModel } from '../models/games.model'\nimport { TYPES } from \"../models/types\";\nimport { TeamsStoreModel } from '../models/teams.model';\n\n@injectable()\nclass GamesStore implements GamesStoreModel {\n\n  @inject(TYPES.TeamsStoreModel) private _teams!: TeamsStoreModel;\n\n  @observable games: Games = [];\n\n  @action\n  public async getGames(id: string): Promise<void> {\n    try {\n      // this.games = await fetchGamesApi(id)\n    } catch (response) {\n      alert(response.message)\n    } finally {\n    }\n  }\n\n  @action\n  public getTeamNameById(id: string) {\n     return this._teams.getNameById(id)\n  }\n}\n\nexport {GamesStore}\n"]},"metadata":{},"sourceType":"module"}