{"ast":null,"code":"import _initializerDefineProperty from \"/Users/kirill/Work/NewConfigTools/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/kirill/Work/NewConfigTools/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/kirill/Work/NewConfigTools/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _class2, _descriptor, _temp;\n\nimport { observable, action } from 'mobx';\nimport * as R from 'ramda';\nimport { injectable } from \"inversify\";\nimport \"reflect-metadata\";\nimport { observableMain$ } from '../api';\nlet TeamsStore = (_dec = injectable(), _dec(_class = (_class2 = (_temp = class TeamsStore {\n  constructor() {\n    _initializerDefineProperty(this, \"teams\", _descriptor, this);\n  }\n\n  async getTeams() {\n    // try {\n    //   this.teams = await fetchMainApi();\n    // } catch (response) {\n    //   alert(response.message);\n    // }\n    observableMain$.subscribe({\n      next: x => {\n        this.teams = x;\n      },\n      error: err => {\n        console.error('something wrong occurred: ' + err);\n      }\n    });\n  }\n\n  getNameById(id) {\n    // console.log('Teams Store -', id, this.teams)\n    // this.getTeams()\n    return this.teams.length ? R.find(R.propEq('id', id))(this.teams).name : [];\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"teams\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class2.prototype, \"getTeams\", [action], Object.getOwnPropertyDescriptor(_class2.prototype, \"getTeams\"), _class2.prototype)), _class2)) || _class);\nexport { TeamsStore };","map":{"version":3,"sources":["/Users/kirill/Work/NewConfigTools/src/store/teams.store.ts"],"names":["observable","action","R","injectable","observableMain$","TeamsStore","getTeams","subscribe","next","x","teams","error","err","console","getNameById","id","length","find","propEq","name"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAO,kBAAP;AACA,SAASC,eAAT,QAAgC,QAAhC;IAIMC,U,WADLF,UAAU,E,oCAAX,MACME,UADN,CAC4C;AAAA;AAAA;AAAA;;AAG1C,QACaC,QADb,GACuC;AACrC;AACA;AACA;AACA;AACA;AACAF,IAAAA,eAAe,CAACG,SAAhB,CAA0B;AACxBC,MAAAA,IAAI,EAAGC,CAAD,IAAO;AACX,aAAKC,KAAL,GAAaD,CAAb;AACD,OAHuB;AAIxBE,MAAAA,KAAK,EAAGC,GAAD,IAAS;AAAEC,QAAAA,OAAO,CAACF,KAAR,CAAc,+BAA+BC,GAA7C;AAAmD;AAJ7C,KAA1B;AAMD;;AAEME,EAAAA,WAAP,CAAmBC,EAAnB,EAAuC;AACrC;AACA;AACA,WAAO,KAAKL,KAAL,CAAWM,MAAX,GAAoBd,CAAC,CAACe,IAAF,CAAOf,CAAC,CAACgB,MAAF,CAAS,IAAT,EAAeH,EAAf,CAAP,EAA2B,KAAKL,KAAhC,EAAuCS,IAA3D,GAAkE,EAAzE;AACD;;AAtByC,C,gFACzCnB,U;;;;;WAAuC,E;;8DAEvCC,M;AAsBH,SAASI,UAAT","sourcesContent":["import { observable, action } from 'mobx'\nimport * as R from 'ramda'\nimport { injectable } from \"inversify\"\nimport \"reflect-metadata\";\nimport { observableMain$ } from '../api'\nimport { Teams, TeamsStoreModel } from '../models/teams.model'\n\n@injectable()\nclass TeamsStore implements TeamsStoreModel {\n  @observable public teams: Teams | any = [];\n\n  @action\n  public async getTeams(): Promise<void> {\n    // try {\n    //   this.teams = await fetchMainApi();\n    // } catch (response) {\n    //   alert(response.message);\n    // }\n    observableMain$.subscribe({\n      next: (x) => { \n        this.teams = x\n      },\n      error: (err) => { console.error('something wrong occurred: ' + err) }\n    })\n  }\n\n  public getNameById(id: string): string {\n    // console.log('Teams Store -', id, this.teams)\n    // this.getTeams()\n    return this.teams.length ? R.find(R.propEq('id', id))(this.teams).name : []\n  }\n}\n\nexport { TeamsStore }\n"]},"metadata":{},"sourceType":"module"}