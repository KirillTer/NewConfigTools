"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require("react");
var redux_1 = require("redux");
var react_redux_1 = require("react-redux");
var request_log_1 = require("../../components/request_log");
var request_tree_1 = require("../../components/request_tree");
var log_details_1 = require("../../components/log_details");
var logger_actions_1 = require("../../actions/logger_actions");
function mapStateToPropsReposPage(state) {
    return {
        app: state.get("app"),
        log: state.get("log")
    };
}
function mapDispatchToPropsReposPage(dispatch) {
    return { actions: redux_1.bindActionCreators(logger_actions_1.default, dispatch) };
}
var LoggerPage = (function (_super) {
    __extends(LoggerPage, _super);
    function LoggerPage() {
        _super.apply(this, arguments);
    }
    LoggerPage.prototype.render = function () {
        var entries = this.props.log.get("entries");
        var selectedEntry = entries.filter(function (entry) {
            return entry.selected === true;
        }).toJSON()[0];
        return (React.createElement("div", null, React.createElement(request_log_1.default, {height: this.props.app.get("windowHeight"), columnSize: 4, log: entries, filter: this.props.log.get("filter"), selectRequest: this.props.actions.selectRequest.bind(this), filterRequests: this.props.actions.filterRequests.bind(this), clearRequests: this.props.actions.clearRequests.bind(this)}), React.createElement(log_details_1.default, {height: this.props.app.get("windowHeight"), columnSize: 4, entry: selectedEntry}), React.createElement(request_tree_1.default, {height: this.props.app.get("windowHeight"), columnSize: 4, entry: selectedEntry})));
    };
    return LoggerPage;
}(React.Component));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = react_redux_1.connect(mapStateToPropsReposPage, mapDispatchToPropsReposPage)(LoggerPage);
