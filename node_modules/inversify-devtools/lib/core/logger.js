"use strict";
var inversify_logger_middleware_1 = require("inversify-logger-middleware");
var selectable_log_entry_1 = require("./selectable_log_entry");
var default_settings_1 = require("./default_settings");
function getSettings() {
    var settings = window.localStorage.getItem("inversify_settings");
    if (settings === null) {
        settings = default_settings_1.default();
        window.localStorage.setItem("inversify_settings", JSON.stringify(settings));
    }
    else {
        settings = JSON.parse(settings);
    }
    return settings;
}
function getLogger(addLogEntry, initSettings, dispatch) {
    var settings = getSettings();
    dispatch(initSettings(settings));
    var reduxRenderer = function (entry) {
        dispatch(addLogEntry(new selectable_log_entry_1.default(entry), getSettings().size));
    };
    var middleware = inversify_logger_middleware_1.makeLoggerMiddleware(settings, reduxRenderer);
    return middleware;
}
exports.getLogger = getLogger;
