"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require("react");
var panel_1 = require("./panel");
var default_settings_1 = require("../core/default_settings");
var SettingsEditor = (function (_super) {
    __extends(SettingsEditor, _super);
    function SettingsEditor(props) {
        _super.call(this, props);
        this.state = {
            size: props.settings.size
        };
    }
    SettingsEditor.prototype.render = function () {
        var _this = this;
        return (React.createElement(panel_1.default, {title: "Settings", subtitle: "Editor", columnSize: this.props.columnSize, height: this.props.height}, React.createElement("div", {className: "from"}, React.createElement("div", {className: "form-group"}, React.createElement("label", {htmlFor: "settings_log_size"}, "Maximun Log Size:"), React.createElement("input", {type: "text", className: "form-control", style: { width: "50%" }, id: "settings_log_size", placeholder: "Maximun number of entries in the request log", value: this.state.size, onChange: function (e) { _this._handleChange("size", e.target.value); }})), React.createElement("button", {type: "button", className: "btn btn-default", onClick: this._handleSaveClick.bind(this)}, "Save Changes"))));
    };
    SettingsEditor.prototype._handleChange = function (property, value) {
        var update = {};
        update[property] = value;
        this.setState(update);
    };
    SettingsEditor.prototype._handleSaveClick = function () {
        var settings = default_settings_1.default();
        settings.size = parseInt(this.state.size, null);
        this.props.saveSettingsAsync(settings);
    };
    return SettingsEditor;
}(React.Component));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SettingsEditor;
